
.. backlink:

:mod:`data_base` ❭ :mod:`~data_base.db_initializers` ❭ :mod:`~data_base.db_initializers.synapse_activation_binning` ❭ :mod:`~data_base.db_initializers.synapse_activation_binning.save_groupby`


.. title:

save_groupby
============


.. py:function:: data_base.db_initializers.synapse_activation_binning.save_groupby(db, result, groupby)

   Save the result of synapse\_activation\_postprocess\_dask to a database.

   A new model data base within :paramref:`db` is created and the numpy arrays are stored there.

   :Parameters: * **db** (:py:class:`~data\_base.isf\_data\_base.isf\_data\_base.ISFDataBase`) -- The simrun-initialized database object.
                * **result** (*dict*) -- The result of the synapse activation binning.
                * **groupby** (*str*) -- The groupby key for the synapse activation bins.

   :returns: None.

   .. seealso:: :py:meth:`~data\_base.db\_initializers.load\_simrun\_general.init` for how to simrun-initialize a database.


.. 
   Warning: we replace underscores with an escape backslash about 4 lines above to avoid having Sphinx interpret arguments as links.
   However, this may cause issues with code blocks or other literal text, and malform markdown tables
   Use with caution?
..