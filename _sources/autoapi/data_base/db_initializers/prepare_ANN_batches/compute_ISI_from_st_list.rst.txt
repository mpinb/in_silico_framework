
.. backlink:

:mod:`data_base` ❭ :mod:`~data_base.db_initializers` ❭ :mod:`~data_base.db_initializers.prepare_ANN_batches` ❭ :mod:`~data_base.db_initializers.prepare_ANN_batches.compute_ISI_from_st_list`


.. title:

compute_ISI_from_st_list
========================


.. py:function:: data_base.db_initializers.prepare_ANN_batches.compute_ISI_from_st_list(st, min_time=0, max_time=505, time_step=1)

   Construct a time-binned list of inter-spike intervals from a list of spike times.

   Given a list of spike times, this method returns a list of size ``(max\_time - min\_time)//time\_step``,
   where each time step gives the amount of time since the last spike in ms.

   :Parameters: * **st** (*list*) -- List of spike times
                * **min\_time** (*int, optional*) -- Min time of time window in ms. Defaults to 0.
                * **max\_time** (*int, optional*) -- Max time of time window in ms. Defaults to 505.
                * **time\_step** (*int, optional*) -- Timestep in ms. Defaults to 1.

   :returns: A list of inter-spike intervals in ms.
   :rtype: list

   .. seealso::

      :py:meth:`~data\_base.db\_initializers.prepare\_ANN\_batches.compute\_ISI\_from\_st` for the pandas version.
      :py:meth:`~data\_base.db\_initializers.prepare\_ANN\_batches.compute\_ISI\_array` for the array version.


.. 
   Warning: we replace underscores with an escape backslash about 4 lines above to avoid having Sphinx interpret arguments as links.
   However, this may cause issues with code blocks or other literal text, and malform markdown tables
   Use with caution?
..