

.. breadcrumb trail -----------------------------------------------------------------------

:mod:`data_base` ❭ :mod:`~data_base.dbopen` ❭ :mod:`~data_base.dbopen.dbopen`

.. main page title: MUST be BEFORE toctree trigger -------------------------------

dbopen
======

.. setup: which children to show -------------------------------------------------


.. parse out arguments and attributes from class, __init__ & __new__ docstring --------------------
.. fetch attributes and docstring from class docstring
.. fetch arguments from __init__ or __new__ docstring

.. class signature --------------------------------------------------------------

.. py:class:: data_base.dbopen.dbopen(path, mode='r')
   
   Context manager to open files in databases

   This explicitly calls Python's ``open()`` method on a file.
   This is generally not recommended, as the content of databases
   is usually written in a specific format, that is automatically inferred
   by the database.

   However, for development and testing purposes, it may be of use to explicitly open these files.

   .. rubric:: Example
      :class: example

   >>> with dbopen('db://my_db/my_key') as f:
   ...     print(f.read())
   # dumps the raw file content - not recommended for e.g. binary formats

   :Parameters: * **path** (*str*) -- The path to the file.
                * **mode** (*str*) -- The mode in which the file is opened. Default: 'r'

   :Attributes:

   .. attribute:: path

      The path to the file.

      :type: str

   .. attribute:: mode

      The mode in which the file is opened.

      :type: str

   .. attribute:: exit_hooks

      A list of functions to be called when the context manager is exited. Used to close ``.tar`` files

      :type: list

