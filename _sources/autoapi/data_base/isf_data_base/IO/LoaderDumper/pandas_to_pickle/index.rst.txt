
:mod:`data_base` ❭ :mod:`~data_base.isf_data_base` ❭ :mod:`~data_base.isf_data_base.IO` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper.pandas_to_pickle`

pandas_to_pickle
================

.. a hidden toctree for sidebar navigation
.. Include all visible children, except for attributes (makes things verbose)
.. These names need to match either a python object in the Python space, or (as done here) a direct link to an .rst file (without the suffix), either relative or absolute.
.. toctree::
   :hidden:

   Loader </autoapi/data_base/isf_data_base/IO/LoaderDumper/pandas_to_pickle/Loader>
   check </autoapi/data_base/isf_data_base/IO/LoaderDumper/pandas_to_pickle/check>
   dump </autoapi/data_base/isf_data_base/IO/LoaderDumper/pandas_to_pickle/dump>

.. py:module:: data_base.isf_data_base.IO.LoaderDumper.pandas_to_pickle

.. autoapi-nested-parse::
   Read and write a pandas DataFrame to the pickle format.

   .. seealso:: :py:mod:`~data_base.isf_data_base.IO.LoaderDumper.pandas_to_parquet` for the Apache parquet format.


.. rst-class:: absolute-paragraph

Classes
-------


.. list-table:: 
   :header-rows: 0
   :widths: auto
   :class: summarytable
   
   * - :py:obj:`Loader <data_base.isf_data_base.IO.LoaderDumper.pandas_to_pickle.Loader>`
     - Loader for pickle files to pandas DataFrames


.. rst-class:: absolute-paragraph

Functions
---------


.. list-table:: 
   :header-rows: 0
   :widths: auto
   :class: summarytable
   
   * - :py:obj:`check <data_base.isf_data_base.IO.LoaderDumper.pandas_to_pickle.check>`\ (obj)
     - Check whether the object can be saved with this dumper
   * - :py:obj:`dump <data_base.isf_data_base.IO.LoaderDumper.pandas_to_pickle.dump>`\ (obj, savedir)
     - Save the pandas DataFrame to a ``.pickle`` file in the specified directory


