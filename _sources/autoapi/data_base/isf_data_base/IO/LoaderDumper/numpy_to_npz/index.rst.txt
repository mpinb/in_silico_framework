
:mod:`data_base` ❭ :mod:`~data_base.isf_data_base` ❭ :mod:`~data_base.isf_data_base.IO` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper.numpy_to_npz`

numpy_to_npz
============

.. a hidden toctree for sidebar navigation
.. Include all visible children, except for attributes (makes things verbose)
.. These names need to match either a python object in the Python space, or (as done here) a direct link to an .rst file (without the suffix), either relative or absolute.
.. toctree::
   :hidden:

   Loader </autoapi/data_base/isf_data_base/IO/LoaderDumper/numpy_to_npz/Loader>
   check </autoapi/data_base/isf_data_base/IO/LoaderDumper/numpy_to_npz/check>
   dump </autoapi/data_base/isf_data_base/IO/LoaderDumper/numpy_to_npz/dump>

.. py:module:: data_base.isf_data_base.IO.LoaderDumper.numpy_to_npz

.. autoapi-nested-parse::
   Read and write a numpy array to the compressed ``.npz`` format.

   .. seealso:: :py:mod:`~data_base.isf_data_base.IO.LoaderDumper.numpy_to_npy` for saving a single numpy array to a ``npy`` file.


.. rst-class:: absolute-paragraph

Classes
-------


.. list-table:: 
   :header-rows: 0
   :widths: auto
   :class: summarytable
   
   * - :py:obj:`Loader <data_base.isf_data_base.IO.LoaderDumper.numpy_to_npz.Loader>`
     - Loader for ``npz`` numpy arrays


.. rst-class:: absolute-paragraph

Functions
---------


.. list-table:: 
   :header-rows: 0
   :widths: auto
   :class: summarytable
   
   * - :py:obj:`check <data_base.isf_data_base.IO.LoaderDumper.numpy_to_npz.check>`\ (obj)
     - Check whether the object can be saved with this dumper
   * - :py:obj:`dump <data_base.isf_data_base.IO.LoaderDumper.numpy_to_npz.dump>`\ (obj, savedir)
     - Write an object to a ``.npz`` file.


