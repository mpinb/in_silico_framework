
.. backlink:

:mod:`data_base` ❭ :mod:`~data_base.isf_data_base` ❭ :mod:`~data_base.isf_data_base.IO` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper.dask_to_categorized_msgpack` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper.dask_to_categorized_msgpack.dump`


.. title:

dump
====


.. py:function:: data_base.isf_data_base.IO.LoaderDumper.dask_to_categorized_msgpack.dump(obj, savedir, repartition=False, scheduler=None, categorize=True, client=None)

   Save an object to a file in a DataBase in the pandas-msgpack format.
   Has been deprecated since 2023-09-01. Please use another dumper.
   This is only still available for testing purposes in support of backwards compatibility.

   :Parameters: * **obj** (*\_type\_*) -- The object to be saved
                * **savedir** (*str or Path*) -- Output directory to save the file in.
                * **repartition** (*bool, optional*) -- Whether or not to repartition.. Defaults to False.
                * **get** (*\_type\_, optional*) -- A getter method, e.g. dask.get. Defaults to None.
                * **categorize** (*bool, optional*) -- Defaults to True.
                * **client** (*distributed.Client, optional*) -- distributed.Client for parallellization. Defaults to None.
                * **test** (*bool, optional*) -- Whether or not the dumper is called from within a test method. Defaults to False.

   :raises RuntimeError: \_description\_


.. 
   Warning: we replace underscores with an escape backslash about 4 lines above to avoid having Sphinx interpret arguments as links.
   However, this may cause issues with code blocks or other literal text, and malform markdown tables
   Use with caution?
..