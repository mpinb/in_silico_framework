
.. backlink:

:mod:`data_base` ❭ :mod:`~data_base.isf_data_base` ❭ :mod:`~data_base.isf_data_base.IO` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper.utils` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper.utils.set_object_meta`


.. title:

set_object_meta
===============


.. py:function:: data_base.isf_data_base.IO.LoaderDumper.utils.set_object_meta(obj, meta)

   Reset the dtypes of the columns and index of an object to the original dtypes.

   Reads in the object meta from the same savedir and tries to assign the correct dtypes to columns and index.

   :Parameters: * **obj** -- The object to reset the dtypes of.
                * **meta** (*pd.DataFrame*) -- metadata for the object, containing only column names and the index with correct dtypes.

   :returns: None. Adapts the original object.

   :raises AssertionError: If the object is not a pandas DataFrame, pandas Series, or dask DataFrame.
   :raises AssertionError: If no meta information is provided.


.. 
   Warning: we replace underscores with an escape backslash about 4 lines above to avoid having Sphinx interpret arguments as links.
   However, this may cause issues with code blocks or other literal text, and malform markdown tables
   Use with caution?
..