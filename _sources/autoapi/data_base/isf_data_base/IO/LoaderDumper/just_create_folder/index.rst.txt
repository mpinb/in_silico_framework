
:mod:`data_base` ❭ :mod:`~data_base.isf_data_base` ❭ :mod:`~data_base.isf_data_base.IO` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper` ❭ :mod:`~data_base.isf_data_base.IO.LoaderDumper.just_create_folder`

just_create_folder
==================

.. a hidden toctree for sidebar navigation
.. Include all visible children, except for attributes (makes things verbose)
.. These names need to match either a python object in the Python space, or (as done here) a direct link to an .rst file (without the suffix), either relative or absolute.
.. toctree::
   :hidden:

   ManagedFolder </autoapi/data_base/isf_data_base/IO/LoaderDumper/just_create_folder/ManagedFolder>
   Loader </autoapi/data_base/isf_data_base/IO/LoaderDumper/just_create_folder/Loader>
   check </autoapi/data_base/isf_data_base/IO/LoaderDumper/just_create_folder/check>
   dump </autoapi/data_base/isf_data_base/IO/LoaderDumper/just_create_folder/dump>

.. py:module:: data_base.isf_data_base.IO.LoaderDumper.just_create_folder

.. autoapi-nested-parse::
   Create a folder and return it as a ManagedFolder object.


.. rst-class:: absolute-paragraph

Classes
-------


.. list-table:: 
   :header-rows: 0
   :widths: auto
   :class: summarytable
   
   * - :py:obj:`ManagedFolder <data_base.isf_data_base.IO.LoaderDumper.just_create_folder.ManagedFolder>`
     - Wrapper class for a folder path
   * - :py:obj:`Loader <data_base.isf_data_base.IO.LoaderDumper.just_create_folder.Loader>`
     - Load a :py:class:`~data_base.isf_data_base.IO.LoaderDumper.just_create_folder.ManagedFolder` object from a folder path


.. rst-class:: absolute-paragraph

Functions
---------


.. list-table:: 
   :header-rows: 0
   :widths: auto
   :class: summarytable
   
   * - :py:obj:`check <data_base.isf_data_base.IO.LoaderDumper.just_create_folder.check>`\ (obj)
     - Check whether the object can be saved with this dumper
   * - :py:obj:`dump <data_base.isf_data_base.IO.LoaderDumper.just_create_folder.dump>`\ (obj, savedir)
     - Create a folder


