
:mod:`data_base` ❭ :mod:`~data_base.isf_data_base` ❭ :mod:`~data_base.isf_data_base.isf_data_base`

isf_data_base
=============

.. a hidden toctree for sidebar navigation
.. Include all visible children, except for attributes (makes things verbose)
.. These names need to match either a python object in the Python space, or (as done here) a direct link to an .rst file (without the suffix), either relative or absolute.
.. toctree::
   :hidden:

   LoaderWrapper </autoapi/data_base/isf_data_base/isf_data_base/LoaderWrapper>
   MetadataAccessor </autoapi/data_base/isf_data_base/isf_data_base/MetadataAccessor>
   ISFDataBase </autoapi/data_base/isf_data_base/isf_data_base/ISFDataBase>
   _check_working_dir_clean_for_build </autoapi/data_base/isf_data_base/isf_data_base/_check_working_dir_clean_for_build>
   make_all_str </autoapi/data_base/isf_data_base/isf_data_base/make_all_str>
   get_dumper_from_folder </autoapi/data_base/isf_data_base/isf_data_base/get_dumper_from_folder>
   get_isfdb_by_unique_id </autoapi/data_base/isf_data_base/isf_data_base/get_isfdb_by_unique_id>

.. py:module:: data_base.isf_data_base.isf_data_base

.. autoapi-nested-parse::
   Database base for storing and retrieving data in a robust and efficient way.

   The main purpose of this module is to provide the :py:class:`~data_base.isf_data_base.ISFDataBase` class.


.. rst-class:: absolute-paragraph

Classes
-------


.. list-table:: 
   :header-rows: 0
   :widths: auto
   :class: summarytable
   
   * - :py:obj:`LoaderWrapper <data_base.isf_data_base.isf_data_base.LoaderWrapper>`
     - This is a pointer to data, which is stored elsewhere.
   * - :py:obj:`MetadataAccessor <data_base.isf_data_base.isf_data_base.MetadataAccessor>`
     - Access the metadata of some database key.
   * - :py:obj:`ISFDataBase <data_base.isf_data_base.isf_data_base.ISFDataBase>`
     - Main database class.


.. rst-class:: absolute-paragraph

Functions
---------


.. list-table:: 
   :header-rows: 0
   :widths: auto
   :class: summarytable
   
   * - :py:obj:`make_all_str <data_base.isf_data_base.isf_data_base.make_all_str>`\ (dict\_)
     - Convert all items in a (nested) dictionary to string.
   * - :py:obj:`get_dumper_from_folder <data_base.isf_data_base.isf_data_base.get_dumper_from_folder>`\ (folder, return\_)
     - Given a folder (i.e. database key), return the dumper that was used to save the data in that folder/key.
   * - :py:obj:`get_isfdb_by_unique_id <data_base.isf_data_base.isf_data_base.get_isfdb_by_unique_id>`\ (unique\_id)
     - Get an :py:class:`~data_base.isf_data_base.ISFDataBase` object by its unique ID.


