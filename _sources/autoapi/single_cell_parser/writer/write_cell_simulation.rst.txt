
.. backlink:

:mod:`single_cell_parser` ❭ :mod:`~single_cell_parser.writer` ❭ :mod:`~single_cell_parser.writer.write_cell_simulation`


.. title:

write_cell_simulation
=====================


.. py:function:: single_cell_parser.writer.write_cell_simulation(fname=None, cell=None, traces=None, tVec=None, allPoints=False, step_frames=10, selected_index=None)

   Write Amira SpatialGraph files corresponding to time steps of entire simulation run.

   Recorded quantities are passed in tuple traces with strings and recorded in Vectors
   attached to Sections of cell

   .. attention:: Make sure to have created the cell with ``allPoints = True``.

   .. attention:: Performs interpolation if ``nseg != nrOfPts`` for a Section

   :Parameters: * **fname** (*str*) -- The name of the file to write to.
                * **cell** (:py:class:`single\_cell\_parser.cell.Cell`) -- The cell object.
                * **traces** (*list*) -- A list of strings, each representing a recorded quantity.
                * **tVec** (*list*) -- A list of time points.
                * **allPoints** (*bool*) -- If True, all points of the cell are written to the file.
                * **step\_frames** (*int*) -- The number of frames to write.
                * **selected\_index** (*list*) -- A list of indices of the sections to write.

   Example:

   >>> write\_cell\_simulation(
   ...     '/output/directory',
   ...     cell = cell,
   ...     traces = ['Vm'],
   ...     tVec = cell.tVec,
   ...     step\_frames = 1,
   ...     selected\_index=[selected\_index],
   ...     allPoints = True)



.. 
   Warning: we replace underscores with an escape backslash about 4 lines above to avoid having Sphinx interpret arguments as links.
   However, this may cause issues with code blocks or other literal text, and malform markdown tables
   Use with caution?
..