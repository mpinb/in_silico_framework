
.. backlink:

:mod:`single_cell_parser` ❭ :mod:`~single_cell_parser.reader` ❭ :mod:`~single_cell_parser.reader.read_hoc_file`


.. title:

read_hoc_file
=============


.. py:function:: single_cell_parser.reader.read_hoc_file(fname=&#39;&#39;)

   Reads a hoc file and returns a list of Edge objects.

   This list of sections is parsed to a :py:class:`~single\_cell\_parser.cell\_parser.CellParser` object
   using :py:meth:`~single\_cell\_parser.cell\_parser.CellParser.spatialgraph\_to\_cell`.

   See :ref:`hoc\_file\_format` for more information on the hoc file format.

   .. seealso::

      The module :py:mod:`singlecell\_input\_mapper` also contains a method
      :py:meth:`~singlecell\_input\_mapper.singlecell\_input\_mapper.reader.read\_hoc\_file`.
      A notable **difference** is that this method reads in axon sections,
      while the :py:mod:`singlecell\_input\_mapper` variant does not.

   :Parameters: **fname** (*str*) -- The name of the file to be read.

   :raises IOError: If the input file does not have a `.hoc` or `.HOC` suffix.

   :returns: A list of :py:class:`Edge` objects.
   :rtype: list

   .. rubric:: Example
      :class: example

   >>> read\_hoc\_file(hoc\_file)
   [
       \_Edge(
           label='Soma',
           hocLabel='soma',
           edgePts=[(1.93339, 221.367004, -450.04599), ... , (13.9619, 210.149002, -447.901001)],
           diameterList=[12.542, 13.3094, ... , 3.5997), parentID=None, parentConnect=None),
       \_Edge(
           label='BasalDendrite\_1\_0',
           hocLabel='BasalDendrite\_1\_0',
           edgePts=[(6.36964, 224.735992, -452.399994), (6.34155, 222.962997, -451.906006), ...],
           diameterList=[2.04, 2.04, ... , 2.04), parentID=0, parentConnect=0.009696),
       ...
   ]


.. 
   Warning: we replace underscores with an escape backslash about 4 lines above to avoid having Sphinx interpret arguments as links.
   However, this may cause issues with code blocks or other literal text, and malform markdown tables
   Use with caution?
..