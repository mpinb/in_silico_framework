

.. breadcrumb trail -----------------------------------------------------------------------

:mod:`single_cell_parser` ❭ :mod:`~single_cell_parser.reader` ❭ :mod:`~single_cell_parser.reader._Edge`

.. main page title: MUST be BEFORE toctree trigger -------------------------------

_Edge
=====

.. setup: which children to show -------------------------------------------------


.. Trigger the toctree structure in the sidebar for this page

.. toctree::
   :hidden:

   is_valid <_Edge.is_valid>


.. parse out arguments and attributes from class, __init__ & __new__ docstring --------------------
.. fetch attributes and docstring from class docstring
.. fetch arguments from __init__ or __new__ docstring

.. class signature --------------------------------------------------------------

.. py:class:: single_cell_parser.reader._Edge
   
   Convenience class for NEURON segments.

   Private class used in :py:meth:`~single_cell_parser.reader.read_hoc_file` to store information about a single morphological segment spanning from point to point.
   These edges are loosely similar to NEURON segments if full segmentation is used, but should not be used as API to neuron segments.
   If :math:`d-\lambda` segmentation is used, these edges are **not** comparable to NEURON segments.

   The purpose of this class is for private use in reading in hoc files: it should not be invoked directly.

   .. seealso::

      :py:meth:`~single_cell_parser.cell_parser.CellParser.determine_nseg` for determining the number of segments in a section, and API
      access to NEURON segments.

   .. seealso::

      :py:class:`singlecell_input_mapper.singlecell_input_mapper.reader._Edge` for a similar class
      that is used in the :py:mod:`singlecell_input_mapper` module.

   :Attributes:

   .. attribute:: label

      label and ID of the segment (e.g. "Dendrite_1_0_0").

      :type: str

   .. attribute:: hocLabel

      Hoc label of the segment (e.g. "Soma", "Axon" ...).

      :type: str

   .. attribute:: edgePts

      List of points in the segment.

      :type: list

   .. attribute:: diameterList

      List of diameters at each point.

      :type: list

   .. attribute:: parentID

      label and ID of the parent segment.

      :type: int

   .. attribute:: parentConnect

      How far along the parent section the connection is (i.e. the `x`-coordinate).

      :type: float

   .. attribute:: valid

      Flag indicating if the segment is valid.

      :type: bool

   :Methods:

   
   .. list-table:: 
      :header-rows: 0
      :widths: auto
      :class: summarytable
      
      * - :py:obj:`is_valid <single_cell_parser.reader._Edge.is_valid>`\ ()
        - Check if this edge is valid.

