
.. backlink:

:mod:`single_cell_parser` ❭ :mod:`~single_cell_parser.analyze` ❭ :mod:`~single_cell_parser.analyze.membrane_potential_analysis` ❭ :mod:`~single_cell_parser.analyze.membrane_potential_analysis.compute_uPSP_amplitude`


.. title:

compute_uPSP_amplitude
======================


.. py:function:: single_cell_parser.analyze.membrane_potential_analysis.compute_uPSP_amplitude(t, v, tSyn, isEPSP=True, t_width_baseline=10.0)

   Compute the amplitude of a uPSP.

   Simple method for determining amplitude of a unitary post-synaptic potential (uPSP)

   :Parameters: * **t** (*list*) -- Time vector
                * **v** (*list*) -- Membrane potential vector
                * **tSyn** (*float*) -- Timepoint of synaptic activation.
                * **isEPSP** (*bool*) -- If True, the uPSP is an excitatory post-synaptic potential (EPSP).
                  If False, the uPSP is an inhibitory post-synaptic potential (IPSP).
                  Default is ``True``.
                * **t\_width\_baseline** (*float*) -- Width of the time window to calculate the baseline membrane voltage.
                  Default is :math:`10.0 ms`.

   :returns: Amplitude of the uPSP.
   :rtype: float


.. 
   Warning: we replace underscores with an escape backslash about 4 lines above to avoid having Sphinx interpret arguments as links.
   However, this may cause issues with code blocks or other literal text, and malform markdown tables
   Use with caution?
..