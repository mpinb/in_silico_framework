
.. backlink:

:mod:`visualize` ❭ :mod:`~visualize.utils` ❭ :mod:`~visualize.utils.write_video_from_images`


.. title:

write_video_from_images
=======================


.. py:function:: visualize.utils.write_video_from_images(images, out_path, fps=24, images_format=&#39;.png&#39;, quality=5, codec=&#39;mpeg4&#39;, auto_sort_paths=True)

   Creates a video from a set of images.

   Images must be specified as a list of images, a directory with images or a list of directories with images.
   Uses glob pattern matching if a directory of images is specified (allows for using the "*" as a wildcard).

   .. note::

      Globbing is not enabled by default on Windows machines.
      If running this command on windows, please set the :paramref:`glob` argument to False and specify a non-glob type match pattern.

   :Parameters: * **images** (*list | str*) -- list of images, a directory with images or a list of directories with images
                * **out\_path** (*str*) -- dir where the video will be generated + name of the video
                * **fps** (*int*) -- frames per second
                * **images\_format** (*str*) -- .png, .pdf, .jpg ...
                * **quality** (*int*) -- quality of the video. Only used with the mpeg4 codec
                * **codec** (*str*) -- codec to use. Default is mpeg4.
                * **auto\_sort\_paths** (*bool*) -- paths to images sorted

   :returns: None. Writes the video to the specified path.


.. 
   Warning: we replace underscores with an escape backslash about 4 lines above to avoid having Sphinx interpret arguments as links.
   However, this may cause issues with code blocks or other literal text, and malform markdown tables
   Use with caution?
..