# Builds ISF for any Python version (2.7/3.8/3.9), depending on the input
name: Build ISF
on:
  workflow_call:
    inputs:
      py_version:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up cache for Anaconda environment
      uses: actions/cache@v3
      with:
        path: ${{ runner.tool_cache }}/anaconda_isf${{ inputs.py_version }}
        key: ${{ runner.os }}-anaconda-${{ inputs.py_version }}-${{ hashFiles('**/environment.yml') }}
        restore-keys: |
          ${{ runner.os }}-anaconda-${{ inputs.py_version }}-

    - name: Build ISF
      run: |
        CONDA_TARGET_DIR="${{ runner.tool_cache }}/anaconda_isf${{ inputs.py_version }}"
        if [ -d "$CONDA_TARGET_DIR" ]; then
          echo "Found existing installation in $CONDA_TARGET_DIR. Removing previous Anaconda installation..."
          rm -r "$CONDA_TARGET_DIR"
        else
          echo "No previous Anaconda installation found. Continuing..."
        fi
        pushd .
        cd installer/py${{ inputs.py_version }}
        set -o pipefail
        ./install.sh -p $CONDA_TARGET_DIR | tee $HOME/build_output_${{ inputs.py_version }}.txt
        exit_status=${PIPESTATUS[0]}
        popd
        source $CONDA_TARGET_DIR/bin/activate
        conda list 
        exit $exit_status

    - name: Save success state
      if: ${{ always() }}
      run: |
        echo "Build success = ${{ job.status }}"
        echo ${{ job.status }} > $HOME/build_success${{ inputs.py_version }}.txt 

    - name: Save build output as artifact
      uses: actions/upload-artifact@v3
      if: ${{ always() }} 
      with:
        name: ${{ github.run_id }}_build_output
        path: |
          $HOME/build_output_${{ inputs.py_version }}.txt