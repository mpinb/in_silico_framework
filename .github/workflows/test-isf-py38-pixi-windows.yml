name: Windows
on:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - .gitignore
    branches:
      - develop
      - master
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    name: Test pixi windows
    runs-on: ['self-hosted', 'Windows']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install & setup environment
        uses: prefix-dev/setup-pixi@v0.8.8
        with:
          pixi-version: v0.47.0
          cache: true
          auth-host: prefix.dev
          auth-token: ${{ secrets.PREFIX_DEV_TOKEN }}
          manifest-path: pyproject.toml
          post-cleanup: true
          pixi-bin-path: ${{ runner.temp }}\Scripts\pixi.exe

      - name: Preliminary setup
        shell: cmd
        run: |
          echo ------------ Preliminary setup for tests -------------
          echo Creating tests\logs\ directory...
          mkdir tests\logs

          echo ------------ Configuring Dask -------------
          set DASK_CONFIG=.\config\dask_config.yml

          if not exist "%USERPROFILE%\tmp" mkdir "%USERPROFILE%\tmp"
          set TMPDIR=%USERPROFILE%\tmp

      - name: Compile mechanisms
        shell: cmd
        run: |
          set NEURONHOME=C:\nrn
          pixi r python -c "import mechanisms.l5pt" && exit 0 || exit 1

      - name: Test ISF
        shell: cmd
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEURONHOME: C:\nrn
        run: |
          set MPLBACKEND=Agg
          echo ------------ Running tests -------------
          pixi r pytest -n 6 -rsx -vv -k "not test_visualization" --dist=loadscope --color=yes --durations=0 --cov-report xml:tests\logs\report_py38.xml --cov=. --dask_server_port 8786 tests

      - name: Test visualization
        shell: cmd
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEURONHOME: C:\nrn
        run: |
          set MPLBACKEND=Agg
          echo ------------ Running tests -------------
          pixi r pytest -n 2 -rsx -vv --color=yes --durations=15 --cov-report xml:tests\logs\report_py38.xml --cov=. --dask_server_port 8786 tests\test_visualization

      - name: Test ModelDataBase backwards compatibility
        shell: cmd
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEURONHOME: C:\nrn
        run: |
          set ISF_USE_MDB=1
          pixi r pytest -rsx -vv --color=yes --durations=15 --dask_server_port 8786 tests\test_data_base
          set ISF_USE_MDB=

      - name: Save test logs
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: ${{ github.run_id }}_logs
          path: ./tests/logs/
