name: Windows
on:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - .gitignore
    branches:
      - develop
      - master
  push:
    branches:
      - master
      - windows
  workflow_dispatch:

jobs:
  test:
    name: Test pixi windows
    runs-on: ['self-hosted', 'Windows']

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install & setup environment
        uses: prefix-dev/setup-pixi@v0.8.8
        with:
          pixi-version: v0.46.0
          cache: true
          auth-host: prefix.dev
          auth-token: ${{ secrets.PREFIX_DEV_TOKEN }}
          manifest-path: pyproject.toml

      - name: Preliminary setup
        run: |
            Write-Host "------------ Preliminary setup for tests -------------"
            Write-Host "Creating tests/logs/ directory..."
            New-Item -ItemType Directory -Force -Path ./tests/logs/

            Write-Host "------------ Configuring Dask -------------"
            $env:DASK_CONFIG = "./config/dask_config.yml"

            Remove-Item Env:DISPLAY -ErrorAction SilentlyContinue
            if (-Not (Test-Path "$HOME/tmp")) {
            New-Item -ItemType Directory -Path "$HOME/tmp"
            }
            $env:TMPDIR = "$HOME/tmp"

      - name: Launch Dask scheduler and workers
        run: |
            Write-Host "Launching Dask scheduler..."
            Start-Process -NoNewWindow -FilePath pixi `
              -ArgumentList "r dask-scheduler --port=8786 --bokeh-port=8787 --host=localhost" `
              -RedirectStandardOutput ".\tests\logs\dask_scheduler_out${{ github.run_id }}.log" `
              -RedirectStandardError ".\tests\logs\dask_scheduler_err${{ github.run_id }}.log"

            Write-Host "Launching Dask workers..."
            Start-Process -NoNewWindow -FilePath pixi `
              -ArgumentList "r dask-worker localhost:8786 --nthreads 1 --nprocs 10 --memory-limit=100e15 --local-directory=." `
              -RedirectStandardOutput ".\tests\logs\dask_workers_out${{ github.run_id }}.log" `
              -RedirectStandardError ".\tests\logs\dask_workers_err${{ github.run_id }}.log"

            Write-Host "Waiting for Dask scheduler to be ready..."
            for ($i = 1; $i -le 30; $i++) {
            if (Test-NetConnection -ComputerName localhost -Port 8786 -InformationLevel Quiet) {
              Write-Host "Dask scheduler is ready!"
              break
            }
            Write-Host "Waiting for Dask scheduler..."
            Start-Sleep -Seconds 2
            }

      - name: Test ISF
        run: |
          pixi r python -c 'import os, sys; print("PYTHONPATH:", os.environ.get("PYTHONPATH", "")); print("PATH:", sys.path)'
          pixi r pytest `
            -n 5 `
            -rsx `
            -vv `
            --color=yes `
            --durations=15 `
            --cov-report xml:tests\logs\report_py38.xml `
            --cov=. `
            --dask_server_port 8786 tests
        env: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test ModelDataBase backwards compatibility
        run: |
          $env:ISF_USE_MDB = "1"
          pixi r pytest -n 5 -rsx -vv --color=yes --durations=15 --dask_server_port 8786 tests\test_data_base\
          Remove-Item Env:ISF_USE_MDB -ErrorAction SilentlyContinue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save test logs
        uses: actions/upload-artifact@v4
        if: ${{ always() }} 
        with:
          name: ${{ github.run_id }}_logs
          path: |
            ./tests/logs/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./tests/logs/report_py38.xml
          verbose: true


