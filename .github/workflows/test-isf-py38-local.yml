name: ISF Py 3.8
on:
  push:
    branches: '*'
  workflow_dispatch:

jobs:

  build:
    name: Build
    uses: ./.github/workflows/build-isf.yml
    with:
      py_version: 3.8

  test:
    name: Test
    needs: build  # assures there is a build of ISF
    # Assure test runs on whatever runner the build ran on
    # Note that runners are requested based on label, not on name
    # So the runner should have a label equal to its name
    runs-on: ${{ needs.build.outputs.runner_name }}
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Test in-silico-framework for Python 3.8
        run: |
          pkill dask-scheduler
          pkill dask-worker
          CONDA_TARGET_DIR="$HOME/anaconda_isf3.8"
          source $CONDA_TARGET_DIR/bin/activate
          echo "Using Python: $(which python)"
          export PYTHONPATH=$(pwd):$HOME
          echo $PYTHONPATH

          name=${{ runner.name }}
          runner_number=$( echo $name | grep -Eo '[0-9]+$' )
          port_number=387${runner_number: -1}6
          bokeh_port=387${runner_number: -1}7
          echo "Launching Dask server on $name"
          echo "Using port $port_number and bokeh port $bokeh_port"

          (dask-scheduler --port=$port_number --bokeh-port=$bokeh_port >> dask_scheduler.txt 2>&1)&
          (dask-worker localhost:$port_number --nthreads 1 --nprocs 4 --memory-limit=100e15 >> dask_workers.txt 2>&1)&
          pytest -n 4 -rsx -vv --color=yes --durations=15 --cov-report xml:tests/coverage_reports/report_py38.xml --cov=. --dask_server_port $port_number tests/
      - name: Cleanup dask orphan processes
        if: ${{ always() }}
        run: |
          pkill dask-scheduler
          pkill dask-worker

      - uses: actions/upload-artifact@v3
        if: ${{ always() }} 
        with:
          name: Dask output
          path: |
            - dask_output.log
            - dask_workers.txt
            - dask_scheduler.txt

      - uses: actions/upload-artifact@v3
        if: ${{ always() }} 
        with:
          name: Tests logging output
          path: |
            - $(pwd)/tests/test.log

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./tests/coverage_reports/report_py38.xml
          verbose: true # optional (default = false)
      
