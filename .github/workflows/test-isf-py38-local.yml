name: ISF Py3.8 (local) test
on:
  push:
    branches: '*'
  workflow_dispatch:

jobs:

  build:
    name: Build ISF 3.8
    uses: ./.github/workflows/build-isf.yml
    with:
      py_version: 3.8

  test:
    needs: build  # assures there is a build of ISF
    # Assure test runs on whatever runner the build ran on
    # Note that runners are requested based on label, not on name
    # So the runner should have a label equal to its name
    runs-on: ${{ needs.build.outputs.runner_name }}
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Test in-silico-framework for Python 3.8
        run: |
          CONDA_TARGET_DIR="$(pwd)/anaconda_isf3.8"
          source $CONDA_TARGET_DIR/bin/activate
          echo "Using Python: $(which python)"
          export PYTHONPATH=$(pwd)
          echo $PYTHONPATH
          name=${{ runner.name }}
          runner_number=$( echo $name | grep -Eo '[0-9]+$' )
          port_number=387${runner_number: -1}6
          bokeh_port=387${runner_number: -1}7

          echo "Setting dask config with env variables"
          export DASK_DISTRIBUTED__WORKER__MEMORY__TARGET=0.90
          export DASK_DISTRIBUTED__WORKER__MEMORY__SPILL=False
          export DASK_DISTRIBUTED__WORKER__MEMORY__PAUSE=False
          export DASK_DISTRIBUTED__WORKER__MEMORY__TERMINATE=False

          echo "Launching Dask server on $name"
          echo "Using port $port_number and bokeh port $bokeh_port"
          echo "Memory target: $DASK_DISTRIBUTED__WORKER__MEMORY__TARGET"
          echo "Memory spill: $DASK_DISTRIBUTED__WORKER__MEMORY__SPILL"
          echo "Memory pause: $DASK_DISTRIBUTED__WORKER__MEMORY__PAUSE"
          echo "Memory terminate: $DASK_DISTRIBUTED__WORKER__MEMORY__TERMINATE"
          (dask-scheduler --port=$port_number --bokeh-port=$bokeh_port > dask_scheduler.txt)
          (dask-worker localhost:$port_number --nthreads 1 --nprocs 4 --memory-limit=100e15 > dask_workers.txt)
          pytest -n 4 -rsx -vv --color=yes --cov-report xml:tests/coverage_reports/report_py3.xml --cov=. --dask_server_port $port_number tests

      - uses: actions/upload-artifact@v3
        with:
          name: Dask scheduler output
          path: |
            - dask_scheduler.txt
            - dask_workers.txt

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./tests/coverage_reports/report_py3.xml
          verbose: true # optional (default = false)
      
