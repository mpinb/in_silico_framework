# Installation of in-silico-framework followed by CI tests.
# Builds ISF locally on the MPINB-hosted runner and runs all tests
name: ISF Py3 (local) build/test
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: '*'
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [ self-hosted, MPINB_test ]
    defaults:
      run:
        shell: bash -l {0}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Install Anaconda3 and update conda package manager
      - name: Install Anaconda3
        run: |
          CONDA_TARGET_DIR="$HOME/anaconda_isf3"
          if [ -d "$HOME/anaconda_isf3" ]; then
            echo "Found existing installation in $HOME. Removing previous Anaconda installation..."
            rm -r "$HOME/anaconda_isf3"
          else
            echo "No previous Anaconda installation found. Continuing..."
          fi
          export ISF_HOME="$HOME"
          pushd .
          cd installer
          ./isf-install.sh -d -t py3 -i $CONDA_TARGET_DIR
          popd
          source $CONDA_TARGET_DIR/bin/activate
          conda list
      # Run in-silico-framework tests
      - name: Test in-silico-framework
        run: |
          source $ISF_HOME/conda3-isf/bin/activate
          export PYTHONPATH="$(pwd)"
          dask-scheduler --port=38786 --dashboard-address=38787 &
          dask-worker localhost:38786 --nthreads 1 --nprocs 4 --memory-limit=100e15 &
          pytest -rsx -vv --color=yes --cov-report xml:tests/coverage_reports/report_py3.xml --cov=. tests
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./tests/coverage_reports/report_py3.xml
          verbose: true # optional (default = false)
        
