name: Linux
on:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - .gitignore
    branches:
      - develop
      - master
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    name: Test pixi linux
    runs-on: ['ibs3005', 'self-hosted']
    services:
      dask-scheduler:
        image: ghcr.io/dask/dask
        ports:
          - 8786:8786  # Dask scheduler port
          - 8787:8787  # Dask dashboard port
        options: >-
          --name dask-scheduler
          --rm
          dask-scheduler
          --port=8786
          --bokeh-port=8787
          --host=0.0.0.0
      dask-worker:
        image: daskdev/dask
        options: >-
          --name dask-worker
          --rm
          dask-worker tcp://dask-scheduler:8786
          --nthreads 1
          --nprocs 10
          --memory-limit=100e15
          --local-directory="/tmp"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install & setup environment
        uses: prefix-dev/setup-pixi@v0.8.8
        with:
          pixi-version: v0.46.0
          cache: true
          auth-host: prefix.dev
          auth-token: ${{ secrets.PREFIX_DEV_TOKEN }}
          manifest-path: pyproject.toml

      - name: Capture Dask Scheduler Logs
        run: docker logs dask-scheduler > ./tests/logs/dask_scheduler_${{ github.run_id }}.log 2>&1

      - name: Capture Dask Worker Logs
        run: docker logs dask-worker > ./tests/logs/dask_worker_${{ github.run_id }}.log 2>&1

      - name: Test ISF
        run: |
          pixi r pytest -n 5 -rsx -vv --color=yes --durations=15 --cov-report xml:tests/logs/report_py38.xml --cov=. --dask_server_port 38786 tests || exit 1
        env: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test ModelDataBase backwards compatibility
        run: |
          export ISF_USE_MDB=1
          pixi r pytest -n 5 -rsx -vv --color=yes --durations=15 --dask_server_port 38786 tests/test_data_base/
          unset ISF_USE_MDB
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save test logs
        uses: actions/upload-artifact@v4
        if: ${{ always() }} 
        with:
          name: ${{ github.run_id }}_logs
          path: |
            ./tests/logs/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./tests/logs/report_py38.xml
          verbose: true


