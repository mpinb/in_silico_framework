/*****************************************************
*Template for genetic algorithm in NEURON
*Author: Shaul Druckmann, Hebrew U, May 2006
*
*Modified by: Etay Hay, Hebrew University of Jerusalem, 2011
*****************************************************/

begintemplate Genome
	objref genome_mat, parameter_bound_list, mc
	strdef record_path, str_1,str_2, dir
	
	public genome_mat,gene_num
	public set_genome
	proc init()	{
		mc = $o1
		dir = $s3
		set_config_parameters()

		genome_mat = new Matrix(gene_num,2)
		set_genome()
		if ($2 == 1)	{output_genome()}
	}
	/*****************************************************************
	// Procedure that updates parameters from the GA configuration	
	/****************************************************************/
	
	proc set_config_parameters()	{local base_seed localobj st
		gene_num = mc.get_pol().count
		parameter_bound_list = mc.get_parameter_bound_list() 
		st =  mc.get_string_parameter("RecordPath")
		base_seed = mc.get_numerical_parameter("BaseSeed")
		st =  mc.get_string_parameter("RecordPath")
		sprint(record_path, "%s_seed_%d", st.s, base_seed)
		str_1 = record_path 
	
	}

	proc set_genome()	{local i
		for (i=0;i<parameter_bound_list.count;i=i+1)	{
			genome_mat.x[i][0] = parameter_bound_list.o(i).x[0]
			genome_mat.x[i][1] = parameter_bound_list.o(i).x[1]
		}
		//print "printing genome mat"
		//genome_mat.printf
	}
	
	proc output_genome()	{localobj fileobj
		sprint(str_1,"%s/%s/genome_file.txt",dir,str_1)
		fileobj = new File(str_1)
		fileobj.wopen()
		genome_mat.fprint(0,fileobj)
		fileobj.close
		print "genome file printed"
	}


endtemplate Genome
