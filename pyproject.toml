[project]
authors = [
  {name = "Arco Bast", email = "basta@janelia.hhmi.org"},
  {name = "Bjorge Meulemeester", email = "bjorge.meulemeester@mpinb.mpg.de"},
  ]
description = "An In Silico Framework for the generation, simulation and analysis of neuron-network interactions during in vivo conditions."
name = "ISF"
requires-python = "==3.8.*"
version = "0.5.0-beta"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "win-64"]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.system-requirements]
libc = "2.17"
linux = "3.10.0"

[tool.pixi.target.unix.activation.env]
# Add ISF (i.e. the $pwd) to PYTHONPATH to import all ISF packages.
PYTHONPATH = "$(pwd):$PYTHONPATH"
[tool.pixi.target.win.activation.env]
# For windows: same as above + add NEURON to the PATH
PYTHONPATH = "%cd%;%NEURONHOME%/lib/python;%PYTHONPATH%"
PATH = "%PATH%;%NEURONHOME%/bin"
HOME = "%USERPROFILE%"

[tool.pixi.dependencies]
dask = "2.30.0.*"
scikit-learn = "0.23.2.*"
pypdf2 = ">=3.0.1,<4"
mock = ">=5.1.0,<6"
scandir = ">=1.10.0,<2"
kazoo = ">=2.10.0,<3"
scipy = "1.5.2.*"
matplotlib = ">=3.3.2,<4"
seaborn = ">=0.12.2,<0.13"
plotly = ">=5.24.1,<6"
cython = ">=3.0.11,<4"
pytest = ">=8.3.3,<9"
pytest-xdist = ">=3.6.1,<4"
wheel = ">=0.45.1,<0.46"
dash = ">=2.18.1,<3"
pytest-cov = ">=5.0.0,<6"
fasteners = ">=0.17.3,<0.18"
jupyterlab = ">=3.5.3,<4"
jupyter-scatter = ">=0.19.1,<0.20"
cmasher = ">=1.6.3,<2"
ipywidgets = ">=8.1.5,<9"
zarr = ">=2.15.0,<3"
pandas = "1.1.3.*"
pyarrow = ">=7.0.0,<12"

[tool.pixi.pypi-dependencies]
bluepyopt = "==1.9.126"
redis = ">=5.2.0,<6"
isf-pandas-msgpack = ">=0.4.0"
blosc = ">=1.11.1,<2"
blenderspike-py = { git = "https://github.com/ArtemKirsanov/BlenderSpike.git" }

[tool.pixi.target.osx]
pypi-dependencies = { neuron = ">=8.2", "distributed"= ">=2.30.0"}
dependencies = { numpy = "==1.21", pytables = ">=3.7.0,<4" }

[tool.pixi.target.linux]
dependencies = { neuron = "==7.8.2", numpy = "==1.19.2", distributed = "==2.30.0"}
pypi-dependencies = { tables = ">=3.8.0,<4" }

[tool.pixi.target.win]
dependencies = { numpy = "==1.19.2", distributed = "==2.30.0"}
pypi-dependencies = { tables = ">=3.8.0,<4" }

[tool.pixi.environments]
docs = ["docs"]
default = ["isf"]

[tool.pixi.feature.isf]
dependencies = { flask = "==1.1.4"}

[tool.pixi.feature.docs.dependencies]
flask = ">=2"
nbsphinx = ">=0.9.6,<0.10"
jinja2 = ">=3.1.4,<4"
sphinxcontrib-bibtex = ">=2.6.3,<3"
furo = ">=2024.8.6,<2025"
sphinxext-opengraph = ">=0.9.1,<0.10"
sphinx-copybutton = ">=0.5.2,<0.6"
sphinx = ">=7.1.2,<8"
nbsphinx-link = ">=1.3.0,<2"
sphinx-inline-tabs = ">=2023.4.21,<2024"
pandoc = ">=3.6.2,<4"
graphviz = ">=7.0.5,<13"
sphinx-design = ">=0.5.0,<0.6"
sphinxcontrib-video = ">=0.2.1,<0.3"

[tool.pixi.feature.docs.pypi-dependencies]
sphinx-paramlinks = ">=0.6.0,<0.7"
catppuccin = { version = ">=2.2.0,<3", extras = ["pygments"] }
sphinx-autoapi = ">=3.5.0,<4" 
sphinx-immaterial = ">=0.11.14,<0.12"

[tool.pixi.tasks.launch_dask_server]
args = [
  {arg = "port", default = "8786"},
  {arg = "dashboard_port", default = "8787"}
]
cmd = [
  "dask-scheduler", 
  "--port={{ port }}", 
  "--dashboard-address={{ dashboard_port }}", 
  "--host=localhost"
  ]
description = "Launch a Dask scheduler"

[tool.pixi.tasks.launch_dask_workers]
args = [
  {arg = "port",        default = "8786"},
  {arg = "dashboard_port",  default = "8787"},
  {arg = "num_workers", default = "4"},
  {arg = "mem_limit",   default = "3GB"}
]
cmd = [
  "dask-worker", 
  "localhost:{{ port }}", 
  "--nthreads=1", 
  "--nprocs={{  num_workers }}", 
  "--memory-limit={{  mem_limit }}", 
  "--dashboard-address={{  dashboard_port }}"
  ]
description = "Launch Dask workers"

[tool.pixi.tasks.launch_jupyter_server]
args = [
  {arg = "port", default = "11113"}
]
cmd = [
  "jupyter-lab", 
  "--ip='*'", 
  "--no-browser", 
  "--port={{ port }}", 
  "--NotebookApp.allow_origin='*'"
  ]
description = "Launch a Jupyter Lab server"

[tool.pixi.tasks.test]
args = [
  {arg = "n_pytest_workers", default = "4"},
  {arg = "dask_port",   default = "8786"}
]
cmd = [
  "pytest", 
  "-rsx",
  "-n",
  "{{ n_pytest_workers }}",
  "-vv",
  "--color=yes",
  "--durations=15",
  "--dask_server_port",
  "{{ dask_port }}"
]
description = "Run test suite"
cwd="tests"

[tool.pytest.ini_options]
markers = [
  "dask_check_health: Check the health of dask workers after running this test."
]

[tool.pixi.tasks.download_bc_model]
cmd = ["./download_bc_model.sh"]
description = "Download ISF's barrel cortex model from Harvard Datverse"
cwd="installer"


[tool.pixi.feature.docs.tasks]
# Removing tutorials from doctrees and build is necessary to avoid slow recursion issues when building repeatedly
remove_tutorial_content = {cmd = [
  "rm", 
  "-rf", 
  "docs/_build/doctrees/_build",
  "docs/_build/doctrees/tutorials",
  "docs/_build/html/_build",
  "docs/_build/html/tutorials",
  "docs/_build/doctrees/nbsphinx"
  ], description = "Remove tutorial content from docs"}
build_docs = {cmd = ["make", "html"], description = "Build the documentation", cwd="docs", depends-on = ["remove_tutorial_content"]}
host_docs = {cmd = ["python", "-m", "http.server", "8000"], description = "Host the documentation", cwd="docs/_build/html"}
